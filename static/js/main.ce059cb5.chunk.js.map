{"version":3,"sources":["store.js","Components/Header/HeaderPresenter.js","Components/Header/index.js","Components/Header/HeaderContainer.js","Components/Notification/NotificationPresenter.js","Components/Notification/index.js","Components/Notification/NotificationContainer.js","Components/App/AppPresenter.js","Components/App/index.js","Components/App/AppContainer.js","typography.js","index.js"],"names":["Store","React","createContext","Header","styled","header","_templateObject","HeaderIcon","span","_templateObject2","Number","_templateObject3","HeaderPresenter","react_default","a","createElement","styled_flex_component_es","full","justifyBetween","alignCenter","lib_default","name","HeaderPresenter_Number","src_store","Consumer","notifications","unseen","Object","keys","map","key","seen","push","length","getUnseen","HeaderContainer","Header_HeaderPresenter","this","state","Component","Notification","div","NotificationPresenter_templateObject","props","Title","NotificationPresenter_templateObject2","Button","button","NotificationPresenter_templateObject3","success","danger","NotificationPresenter","_ref","id","text","store","react","onClick","seeNotification","deleteNotification","NotificationContainer","Notification_NotificationPresenter","AppPresenter","Components_Header","column","Components_Notification","AppContainer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","check","_seeNotification","setState","currentState","objectSpread","defineProperty","_deleteNotification","1","2","3","Provider","value","App_AppPresenter","Typography","googleFonts","styles","headerFontFamily","bodyFontFamily","includeNormalize","injectStyles","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.ce059cb5.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nconst Store = React.createContext(null);\r\nexport default Store;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flex, { FlexItem } from \"styled-flex-component\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport Store from \"store\";\r\n\r\n\r\nconst Header = styled.header`\r\n    height : 100px;\r\n    background-color : yellow;\r\n    padding: 0 40px;\r\n    margin-bottom : 30px\r\n`;\r\n\r\nconst HeaderIcon = styled.span`\r\n    width:40px;\r\n    height:40px;\r\n    justify-content : center;\r\n    align-items : center;\r\n    display : flex;\r\n    border-radius : 50%;\r\n    color : white;\r\n    background-color : black;\r\n    margin-right:30px;\r\n    cursor : pointer;\r\n    box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n    position: relative;\r\n    &:hover {\r\n        transform: translateY(-1px);\r\n        box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\r\n    }\r\n`;\r\n\r\nconst Number = styled.span`\r\n    height:30px;\r\n    width:30px;\r\n    border-radius:50%;\r\n    background-color : grey;\r\n    position : absolute;\r\n    display : flex;\r\n    align-items : center;\r\n    justify-content : center;\r\n    left : 25px;\r\n    top : -10px;\r\n`;\r\n\r\nconst getUnseen = notifications =>{\r\n    let unseen =[];\r\n    Object.keys(notifications).map(key =>{\r\n        if(!notifications[key].seen){\r\n            return unseen.push(notifications[key]);\r\n        }\r\n    });\r\n\r\n    return unseen.length;\r\n}\r\n\r\nconst HeaderPresenter = () => (\r\n    <Header>\r\n        <Flex full justifyBetween alignCenter>\r\n            <FlexItem>\r\n                    <h3>react study</h3>\r\n            </FlexItem>\r\n            <FlexItem>\r\n                <Flex>\r\n                    <HeaderIcon>\r\n                        <FontAwesome name = \"user\" />\r\n                    </HeaderIcon>\r\n                    <HeaderIcon>\r\n                        <FontAwesome name=\"cog\" />\r\n                    </HeaderIcon>\r\n                    <HeaderIcon>\r\n                        <FontAwesome name=\"bell\" />\r\n                        <Number>\r\n                        <Store.Consumer>\r\n                            {Store => getUnseen(Store.notifications)}\r\n                        </Store.Consumer>\r\n                        </Number>\r\n                    </HeaderIcon>\r\n                </Flex>\r\n            </FlexItem>\r\n        </Flex>\r\n    </Header>\r\n)\r\n\r\n\r\n\r\n\r\nexport default HeaderPresenter;","import HeaderContainer from \"./HeaderContainer\";\r\nexport default HeaderContainer;","import React , {Component} from \"react\";\r\nimport HeaderPresenter from \"./HeaderPresenter\";\r\n\r\nclass HeaderContainer extends Component{\r\n\r\n  \r\n\r\n\r\n    render(){\r\n        return <HeaderPresenter {...this.state}/>;\r\n    }\r\n}\r\n\r\nexport default HeaderContainer","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Flex, { FlexItem } from \"styled-flex-component\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport Store from \"store\";\r\n\r\nconst Notification = styled.div`\r\n    background-color : white;\r\n    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\r\n    width:80%;\r\n    padding:20px;\r\n    border-radius:15px;\r\n    margin-bottom:15px;\r\n    box-sizing:border-box;\r\n    border : 2px  solid ${props => (props.seen?\"transparent\" :\"yellow\")}\r\n`;\r\n\r\nconst Title = styled.span `\r\n  font-weight:600;\r\n`;\r\n\r\nconst Button = styled.button `\r\n  height:40px;\r\n  width:40px;\r\n  border-radius:50%;\r\n  border:0;\r\n  color:white;\r\n  font-size:10px;\r\n  cursor:pointer;\r\n  background-color:${ props =>{\r\n    if(props.seen){\r\n      return \"skyblue\";\r\n    }else if(props.success){\r\n      return \"green\";\r\n    }else if(props.danger){\r\n      return \"pink\";\r\n    }\r\n  }};\r\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n  transition: all 0.2s ease-out;\r\n  &:hover{\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\r\n  }\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:active {\r\n    transform: translateY(1px);\r\n  }\r\n`;\r\n\r\nconst NotificationPresenter = ({id,text, seen}) =>(\r\n  <Notification seen ={seen}>\r\n    <Flex alignCenter justifyBetween>\r\n      <Title>{text}</Title>\r\n      <FlexItem>\r\n        <Store.Consumer>\r\n          {store =>(\r\n            <Fragment>\r\n              <Button success seen ={seen} onClick ={() => store.seeNotification(id)} >\r\n                  <FontAwesome name=\"check\"/>\r\n              </Button>\r\n              <Button danger seen ={seen} onClick ={() => store.deleteNotification(id)} >\r\n                  <FontAwesome name=\"times\"/>\r\n              </Button>\r\n            </Fragment>\r\n            \r\n          ) }\r\n        </Store.Consumer>\r\n      </FlexItem>\r\n    </Flex>\r\n  </Notification>\r\n);\r\n\r\nNotificationPresenter.propTypes ={\r\n    id : PropTypes.number.isRequired,\r\n    seen : PropTypes.bool.isRequired,\r\n    text : PropTypes.string.isRequired\r\n}\r\n\r\nexport default NotificationPresenter;","import NotificationContainer from \"./NotificationContainer\";\r\nexport default NotificationContainer;","import React, { Component } from \"react\";\r\nimport NotificationPresenter from \"./NotificationPresenter\";\r\n\r\nclass NotificationContainer extends Component {\r\n\r\n  render(){\r\n    return <NotificationPresenter {...this.props}  />\r\n  }\r\n}\r\n\r\nexport default NotificationContainer;","import React, { Fragment } from \"react\";\r\nimport Header from \"Components/Header\";\r\nimport Flex from \"styled-flex-component\";\r\nimport Notification from \"Components/Notification\";\r\nimport Store from \"store\";\r\n\r\nconst AppPresenter = () =>(\r\n  <Fragment>\r\n    <Header/>\r\n    <Flex alignCenter full column>\r\n        <Store.Consumer>\r\n          {\r\n            Store => {\r\n              return Object.keys(Store.notifications).map(key =>\r\n                <Notification \r\n                    key = {Store.notifications[key].id}\r\n                    id = {Store.notifications[key].id}\r\n                    text = {Store.notifications[key].text}\r\n                    seen = {Store.notifications[key].seen}\r\n                />\r\n              )\r\n            }\r\n          }\r\n        </Store.Consumer>  \r\n    </Flex>\r\n  </Fragment>\r\n);\r\n\r\nexport default AppPresenter;","import AppContainer from \"./AppContainer\";\r\nexport default AppContainer;","import React , {Component} from \"react\";\r\nimport AppPresenter from \"./AppPresenter\";\r\nimport Store from \"store\";\r\n\r\n\r\nclass AppContainer extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n   let check = null;\r\n   this._seeNotification = id =>{\r\n        this.setState( currentState  => {\r\n          \r\n          if(currentState.notifications[id].seen){\r\n            check = false;\r\n          }else{\r\n            check =  true;\r\n          }\r\n          return{\r\n            ...currentState ,\r\n              notifications :{\r\n              ...currentState.notifications ,\r\n              [id] : {...currentState.notifications[id],\r\n                seen : check    \r\n                     \r\n              }\r\n               \r\n            }\r\n          }\r\n        } )\r\n    }\r\n\r\n    this._deleteNotification = id =>{\r\n      this.setState(\r\n        currentState =>{\r\n          const newState = delete currentState.notifications[id];\r\n          return newState;\r\n        }\r\n      )\r\n    }\r\n\r\n    this.state ={\r\n      notifications :{\r\n        \"1\" :{\r\n            id :1,\r\n            text :\"lee\",\r\n            seen : false\r\n        },\r\n        \"2\" :{\r\n          id :2,\r\n          text :\"bae\",\r\n          seen : false\r\n      },\r\n      \"3\" :{\r\n        id :3,\r\n        text :\"an\",\r\n        seen : false\r\n      }\r\n      },\r\n      seeNotification :  this._seeNotification ,\r\n      deleteNotification :this._deleteNotification\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Store.Provider value={this.state}>\r\n        <AppPresenter />\r\n      </Store.Provider>\r\n    )\r\n  }\r\n\r\n}\r\nexport default AppContainer","import Typography from \"typography\";\r\n\r\nconst typography = new Typography({\r\n    googleFonts :[\r\n        {\r\n            name:\"Nunito\",\r\n            styles :[\"400\",\"600\"]\r\n        },\r\n        {\r\n            name:\"Open Sans\",\r\n            styles :[400]\r\n        }\r\n    ],\r\n    headerFontFamily :[\r\n        \"Nunito\",\r\n        \"Helvetica Neue\",\r\n        \"Segoe UI\",\r\n        \"Helvetica\",\r\n        \"Arial\",\r\n        \"sans-serif\"\r\n    ],\r\n    bodyFontFamily :[\r\n        \"Open Sans\",\r\n        \"Helvetica Neue\",\r\n        \"Segoe UI\",\r\n        \"Helvetica\",\r\n        \"Arial\",\r\n        \"sans-serif\"\r\n    ] ,\r\n    includeNormalize :false\r\n});\r\n\r\ntypography.injectStyles();","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App/\";\nimport { createGlobalStyle  } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport \"./typography\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    background: red;\n  }\n`\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}